package reqorder;

import java.awt.CardLayout;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import javax.swing.JOptionPane;

public class LoginPanel extends javax.swing.JPanel
{
    private GUI gui;
    
    public LoginPanel()
    {
        initComponents();
    }
    
    protected void Initialise(GUI gui)
    {
        this.gui = gui;
    }
    
    protected void CheckForCapsLock()
    {
        capsLockLabel.setVisible(Toolkit.getDefaultToolkit().getLockingKeyState(KeyEvent.VK_CAPS_LOCK));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        loginLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        newAccountButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        capsLockLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/Language"); // NOI18N
        loginLabel.setText(bundle.getString("loginLabel")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(14, 0, 14, 0);
        add(loginLabel, gridBagConstraints);

        passwordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                passwordFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(14, 0, 14, 0);
        add(passwordField, gridBagConstraints);

        loginButton.setText(bundle.getString("loginButton")); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                loginButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(14, 0, 14, 0);
        add(loginButton, gridBagConstraints);

        newAccountButton.setText(bundle.getString("newAccountButton")); // NOI18N
        newAccountButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                newAccountButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(14, 0, 14, 0);
        add(newAccountButton, gridBagConstraints);

        jLabel15.setBackground(new java.awt.Color(28, 57, 201));
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/login.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 15, 0);
        add(jLabel15, gridBagConstraints);

        capsLockLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        capsLockLabel.setForeground(new java.awt.Color(161, 0, 40));
        capsLockLabel.setText(bundle.getString("capsLockLabel")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(capsLockLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loginButtonActionPerformed
    {//GEN-HEADEREND:event_loginButtonActionPerformed
        try
        {            
            File hashFile = new File(System.getProperty("user.dir") + "/bin/auth");
            String encryptedHash = Files.readString(hashFile.toPath(), StandardCharsets.UTF_8);            
            //decrypt stored hash
            StringBuilder sb=new StringBuilder(String.copyValueOf(passwordField.getPassword()));  
            String reverse = sb.reverse().toString();  
            char[] decryptedHash = Utilities.DecryptPassword(encryptedHash, String.copyValueOf(passwordField.getPassword()), reverse);   
            
            if(Utilities.PasswordValid(passwordField.getPassword(),String.copyValueOf(decryptedHash)))
            {  
                DatabaseManager.dbPassword = gui.dbManager.RetrieveDbPassword(passwordField.getPassword());
                DatabaseManager.reqorderPassword = passwordField.getPassword();
                gui.LoginComplete();               
            }
            else
            {
                JOptionPane.showMessageDialog(this, 
                        Utilities.AllignCenterHTML(Main.BUNDLE.getString("invalidPassword")), 
                        Main.BUNDLE.getString("invalidPasswordTitle"), JOptionPane.WARNING_MESSAGE);        
                passwordField.setText("");
            }
        }
        catch (HeadlessException | IOException | NullPointerException  e)
        {
            BackgroundService.AppendLog(e);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_passwordFieldKeyPressed
    {//GEN-HEADEREND:event_passwordFieldKeyPressed
        CheckForCapsLock();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            loginButtonActionPerformed(null);
    }//GEN-LAST:event_passwordFieldKeyPressed

    private void newAccountButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_newAccountButtonActionPerformed
    {//GEN-HEADEREND:event_newAccountButtonActionPerformed
        if(JOptionPane.showConfirmDialog(this,Utilities.AllignCenterHTML(
                Main.BUNDLE.getString("newAccountWarning")),
                Main.BUNDLE.getString("newAccountWarningTitle"), 
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION)
        {
            File[] filesToDelete = new File[3];
            filesToDelete[0] = new File(System.getProperty("user.dir") + "/databases/properties.mv.db");
            filesToDelete[1] = new File(System.getProperty("user.dir") + "/bin/auth");
            filesToDelete[2] = new File(System.getProperty("user.dir") + "/bin/dba.mv.db");
            for(File file : filesToDelete)
                if(file.exists())
                    file.delete();
            
            CardLayout card = (CardLayout) gui.mainPanel.getLayout();
            card.show(gui.mainPanel, "newUserPanel");             
        }        
    }//GEN-LAST:event_newAccountButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JLabel capsLockLabel;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JButton newAccountButton;
    protected javax.swing.JPasswordField passwordField;
    // End of variables declaration//GEN-END:variables
}
