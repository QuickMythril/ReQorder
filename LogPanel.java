package reqorder;

import java.io.PrintWriter;
import java.io.StringWriter;

public class LogPanel extends javax.swing.JPanel
{
    public LogPanel()
    {
        initComponents();
    }    
    
    protected void AppendLog(String text)
    {
        if(logCheckbox.isSelected())
        {
            if((int)logLimitSpinner.getValue() > 0 && textArea.getText().length() > (int) logLimitSpinner.getValue())
                textArea.setText("");
            
            textArea.append("\n" + text);
        }
    }
    
    protected void AppendLog(Exception e)
    {
        if(logCheckbox.isSelected())
        {
            if((int)logLimitSpinner.getValue() > 0 && textArea.getText().length() > (int) logLimitSpinner.getValue())
                textArea.setText("");
            
            StringWriter sw = new StringWriter();
            PrintWriter pw = new PrintWriter(sw);
            e.printStackTrace(pw);
            
            textArea.append("\n" + sw.toString());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        logPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        logCheckbox = new javax.swing.JCheckBox();
        logLimitSpinner = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        dbEntriesCheckbox = new javax.swing.JCheckBox();

        logPanel.setBackground(new java.awt.Color(210, 207, 223));
        logPanel.setLayout(new java.awt.GridBagLayout());

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setLineWrap(true);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        logPanel.add(jScrollPane1, gridBagConstraints);

        logCheckbox.setText("Update the log");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        logPanel.add(logCheckbox, gridBagConstraints);

        logLimitSpinner.setModel(new javax.swing.SpinnerNumberModel(50000, 0, null, 1000));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        logPanel.add(logLimitSpinner, gridBagConstraints);

        jLabel10.setText("Maximum log size (in characters , 0 is unlimited)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        logPanel.add(jLabel10, gridBagConstraints);

        dbEntriesCheckbox.setText("Log database entries");
        dbEntriesCheckbox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                dbEntriesCheckboxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        logPanel.add(dbEntriesCheckbox, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 719, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(logPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 648, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(logPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dbEntriesCheckboxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_dbEntriesCheckboxActionPerformed
    {//GEN-HEADEREND:event_dbEntriesCheckboxActionPerformed
        DatabaseManager.logDbEntries = dbEntriesCheckbox.isSelected();
    }//GEN-LAST:event_dbEntriesCheckboxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JCheckBox dbEntriesCheckbox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JCheckBox logCheckbox;
    private static javax.swing.JSpinner logLimitSpinner;
    private javax.swing.JPanel logPanel;
    private static javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
